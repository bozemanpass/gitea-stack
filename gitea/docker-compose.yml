
services:
  gitea:
    image: bpi/gitea:local
    environment:
      USER_UID: ${BPI_HOST_UID:-1000}
      USER_GID: ${BPI_HOST_GID:-1000}
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: ${BPI_GITEA_DB_HOST:-db.local:5432}
      GITEA__database__NAME: ${BPI_GITEA_DB_NAME:-gitea}
      GITEA__database__USER: ${BPI_GITEA_DB_USER:-gitea}
      GITEA__database__PASSWD: ${BPI_GITEA_DB_PASSWD:-gitea}
      GITEA__server__HTTP_PORT: ${BPI_GITEA_HTTP_PORT:-3000}
      GITEA__server__LOCAL_ROOT_URL: ${BPI_GITEA_INSTANCE_URL:-http://gitea.local:3000}
      GITEA__server__ROOT_URL: ${BPI_GITEA_INSTANCE_URL:-http://gitea.local:3000}
      GITEA__actions__ENABLED: true
      GITEA__security__INSTALL_LOCK: true
    restart: always
    volumes:
      - gitea-data:/data
    ports:
      - 3000
    depends_on:
      - db

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${BPI_GITEA_DB_USER:-gitea}
      POSTGRES_PASSWORD: ${BPI_GITEA_DB_PASSWD:-gitea}
      POSTGRES_DB: ${BPI_GITEA_DB_NAME:-gitea}
    # Workaround below for lack of docker uid mapping. Change the container's postgres user's uid/gid to match the host user's
    entrypoint: bash
    command: -c  'usermod -u ${BPI_HOST_UID:-1000} postgres;groupmod -g ${BPI_HOST_GID:-1000} postgres;exec /usr/local/bin/docker-entrypoint.sh postgres'
    ports:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  gitea-data:
  postgres-data:
